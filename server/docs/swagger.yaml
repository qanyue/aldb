basePath: /api
host: 127.0.0.1:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Aldb Example API
  version: "1.0"
paths:
  /alga/add:
    post:
      consumes:
      - application/json
      description: 添加藻类图片数据
      parameters:
      - description: 数据集ID
        example: 640fd8c403c8e6ead93ea295
        in: body
        name: riverId
        schema:
          type: string
      - description: 图片ID
        example: 64117bf11c55d4d364da3828
        in: body
        name: name
        schema:
          type: string
      - description: 图片连接
        example: https://aldb.obs.cn-east-3.myhuaweicloud.com/img/1679155481苹果_2014-12-27_11-16-14.jpg
        in: body
        name: src
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: AddAlga
      tags:
      - aldb
  /alga/addMul:
    post:
      consumes:
      - application/json
      description: 批量添加藻类图片数据
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: AddAlgas
      tags:
      - aldbs
  /alga/all:
    get:
      consumes:
      - application/json
      description: 获取一个数据集所有图片
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: getAllAlgas
      tags:
      - aldbs
  /alga/anno:
    get:
      consumes:
      - application/json
      description: 藻类图像获取标注
      parameters:
      - description: 藻类名称
        in: query
        name: alga
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetAnnotationByAlga
      tags:
      - aldb
  /alga/get:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 得到具体藻类图像数据
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: getAlga
      tags:
      - aldb
  /alga/search:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 搜索藻类图像
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: SearchAlga
      tags:
      - aldb
  /anno/add:
    post:
      consumes:
      - application/json
      description: 添加标注
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: AddAnnotation
      tags:
      - aldb
  /anno/delete:
    get:
      consumes:
      - application/json
      description: 删除标注
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: DeleteAnnotation
      tags:
      - aldb
  /river/add:
    post:
      consumes:
      - application/json
      description: 添加河流数据
      parameters:
      - description: 用户邮箱
        example: aaa
        in: body
        name: userEmail
        schema:
          type: string
      - description: 数据集名称ID
        example: test
        in: body
        name: name
        schema:
          type: string
      - description: 数据集描述
        example: testing
        in: body
        name: description
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: AddRiver
      tags:
      - aldb
  /river/all:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取用户所有数据集
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetRivers
      tags:
      - aldb
  /river/info:
    get:
      consumes:
      - application/json
      description: 获取所有数据集藻类列表数据
      parameters:
      - description: 数据集ID
        example: 640fd8c403c8e6ead93ea295
        in: body
        name: RiverID
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetRiverInfo
      tags:
      - aldb
  /tag/add:
    post:
      consumes:
      - application/json
      description: 添加标签数据
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: AddTag
      tags:
      - aldb
  /tag/all:
    get:
      consumes:
      - application/json
      description: 获取所有标签数据
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetTags
      tags:
      - aldb
  /user/all:
    get:
      consumes:
      - application/json
      description: 获取所有用户信息
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetUsers
      tags:
      - aldb
  /user/delete:
    get:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: DeleteUser
      tags:
      - aldb
  /user/info:
    get:
      consumes:
      - application/json
      description: 获取用户信息
      parameters:
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: GetUser
      tags:
      - aldb
  /user/pwd:
    post:
      consumes:
      - application/json
      description: 修改用户密码
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: ChangePassword
      tags:
      - aldb
  /user/update:
    post:
      consumes:
      - application/json
      description: 修改用户信息
      produces:
      - application/json
      responses:
        "200":
          description: '{code, msg, data}'
          schema:
            type: object
      summary: UpdateUser
      tags:
      - aldb
swagger: "2.0"
